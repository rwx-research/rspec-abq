name: Tests & Linting
on: pull_request
permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          skip_install: true # use bundler
          use_bundler: true
          rubocop_flags: '--config .rubocop.yml'
          fail_on_error: true
  rspec:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby:
          - 2.6
          - 2.7
          - 3.0
          - 3.1
        gemfile:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - 3.10
          - 3.11
          - 3.12

    env:
      BUNDLE_WITHOUT: 'development'
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rspec-${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: |
          bundle exec rspec \
            --format json --out tmp/rspec.json \
            --format documentation
      - name: Upload test results to Captain
        uses: rwx-research/upload-captain-artifact@v1
        if: always()
        continue-on-error: true
        with:
          artifacts: |
            [
              {
                "name": "RSpec",
                "path": "tmp/rspec.json",
                "kind": "test_results",
                "parser": "rspec_json"
              }
            ]
          job-matrix: ${{ toJSON(matrix) }}
          captain-token: ${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}
  nixfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - run: nix fmt -- --check flake.nix
  abq-test:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Setup abq
        uses: rwx-research/setup-abq@v1
        with:
          abq-token: ${{ secrets.ABQ_API_KEY }}
      - name: start abq test
        run: abq test --reporter dot -- bundle exec rspec --pattern 'spec/fixture_specs/*_specs.rb'
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.ABQ_API_KEY }}
  abq-work:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        shard: ['1', '2']
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: setup ruby & bundle install
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: Setup abq
        uses: rwx-research/setup-abq@v1
        with:
          abq-token: ${{ secrets.ABQ_API_KEY }}
      - name: start abq work
        run: abq work
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.ABQ_API_KEY }}
  yard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - run: bin/check_yard
