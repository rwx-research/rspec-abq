name: Tests & Linting
on:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          skip_install: true # use bundler
          use_bundler: true
          rubocop_flags: '--config .rubocop.yml'
          fail_on_error: true
  rspec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - run: |
          bundle exec rspec --pattern 'spec/**/*_spec.rb' \
            --format json --out tmp/rspec.json \
            --format documentation
      - run: bundle exec rspec --pattern "spec/**/*_spec.rb" \
      - run: bundle exec rspec ./spec_fixtures
      - name: Upload test results to Captain
        uses: rwx-research/upload-captain-artifact@v1
        if: always()
        continue-on-error: true
        with:
          artifacts: |
            [
              {
                "name": "RSpec",
                "path": "tmp/rspec.json",
                "kind": "test_results",
                "parser": "rspec_json"
              }
            ]
          job-matrix: ${{ toJSON(matrix) }}
          captain-token: ${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}
  nixfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - run: nix fmt
      - run: |
          git_leftovers=$(git status --porcelain)
          if [ -z $git_leftovers ]
          then
            echo "✅ nix fmt didn't change anything"
          else
            echo "❌ unformatted changes left behind"
            git diff
            git status --porcelain
            exit 1
          fi
  abq-test:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Download abq
        run: |
          ABQ_PATH="$HOME/.abq"
          echo "$ABQ_PATH" >> $GITHUB_PATH

          mkdir -p $ABQ_PATH
          pushd $ABQ_PATH
          curl -L \
            "https://captain.build/abq/api/releases/latest/abq_latest_linux_x86-64.tar.gz" \
            -H "Authorization: Bearer ${{ secrets.ABQ_API_KEY }}" \
            -o abq.tar.gz
          tar -xf abq.tar.gz --strip-components 1
          test -x abq
          rm -f abq.tar.gz
          popd
      - name: start abq test
        run: abq test --reporter dot -- bundle exec rspec spec_fixtures spec
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.ABQ_API_KEY }}
  abq-work:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        shard: ['1', '2']
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: setup ruby & bundle install
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: Download abq
        run: |
          ABQ_PATH="$HOME/.abq"
          echo "$ABQ_PATH" >> $GITHUB_PATH

          mkdir -p $ABQ_PATH
          pushd $ABQ_PATH
          curl -L \
            "https://captain.build/abq/api/releases/latest/abq_latest_linux_x86-64.tar.gz" \
            -H "Authorization: Bearer ${{ secrets.ABQ_API_KEY }}" \
            -o abq.tar.gz
          tar -xf abq.tar.gz --strip-components 1
          test -x abq
          rm -f abq.tar.gz
          popd
      - name: start abq test
        run: abq work
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.ABQ_API_KEY }}
