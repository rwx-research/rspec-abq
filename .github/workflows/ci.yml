name: Tests & Linting
on: pull_request
permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          skip_install: true # use bundler
          use_bundler: true
          rubocop_flags: '--config .rubocop.yml'
          fail_on_error: true
  rspec-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby:
          - 2.6
          - 2.7
          - '3.0'
          - 3.1
        gemfile:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - '3.10'
          - 3.11
          - 3.12
    env:
      BUNDLE_WITHOUT: 'development'
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rspec-${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: |
          bundle exec rspec \
            --format json --out tmp/rspec.json \
            --format documentation
      - name: Upload test results to Captain
        uses: rwx-research/upload-captain-artifact@v1
        if: ${{ matrix.ruby == 3.1 && matrix.gemfile == 3.12 && always() }}
        continue-on-error: true
        with:
          artifacts: |
            [
              {
                "name": "RSpec",
                "path": "tmp/rspec.json",
                "kind": "test_results",
                "parser": "rspec_json"
              }
            ]
          job-matrix: ${{ toJSON(matrix) }}
          captain-token: ${{ secrets.RWX_ACCESS_TOKEN }}
  rspec-after-matrix: # strategy borrowed from https://brunoscheufler.com/blog/2022-04-09-the-required-github-status-check-that-wasnt
    needs: rspec-matrix # run after shards
    runs-on: ubuntu-latest
    if: success() # only run when matrix passed
    # store success output flag for ci job
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - id: setoutput
        run: echo "::set-output name=success::true"
  rspec:
    runs-on: ubuntu-latest
    if: always() # always run, so we never skip the check
    needs: rspec-after-matrix
    steps:
      # pass step only when output of previous after-shards job is set
      # in case at least one of the shard fails, after-shards is skipped
      # and the output will not be set, which will then cause the ci job to fail
      - run: |
          passed="${{ needs.rspec-after-matrix.outputs.success }}"
          if [[ $passed == "true" ]]; then
            echo "Shards passed"
            exit 0
          else
            echo "Shards failed"
            exit 1
          fi
  nixfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - run: nix fmt -- --check flake.nix
  abq-test-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        ruby:
          - 2.6
          - 3.1
        gemfile:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - '3.10'
          - 3.11
          - 3.12
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup abq
        uses: rwx-research/setup-abq@v1
        with:
          access-token: ${{ secrets.RWX_ACCESS_TOKEN }}
      - name: start abq test
        # we run the test and then compare the output to a file checked into the repo
        # the first line of the test includes the run id, so we slice it off
        # the last line of the test includes the time to run tests, which is flakey, so we slice it off
        run: |
          set +e
          echo "run tests"
          abq test --reporter dot --run-id "$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT-${{matrix.ruby}}-${{matrix.gemfile}}" -- bin/rspec_without_output_for_abq.sh |
            tee $tty |
            head -n -1 |
            tail -n +2 > test-outputs/rspec-${{matrix.gemfile}}.txt
          echo "**git diff**"
          git diff
          test -z "$(git diff)"
        shell: bash
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.RWX_ACCESS_TOKEN }}
  abq-test-after-matrix: # strategy borrowed from https://brunoscheufler.com/blog/2022-04-09-the-required-github-status-check-that-wasnt
    needs: abq-test-matrix # run after shards
    runs-on: ubuntu-latest
    if: success() # only run when matrix passed
    # store success output flag for ci job
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - id: setoutput
        run: echo "::set-output name=success::true"
  abq-test:
    runs-on: ubuntu-latest
    if: always() # always run, so we never skip the check
    needs: abq-test-after-matrix
    steps:
      # pass step only when output of previous after-shards job is set
      # in case at least one of the shard fails, after-shards is skipped
      # and the output will not be set, which will then cause the ci job to fail
      - run: |
          passed="${{ needs.abq-test-after-matrix.outputs.success }}"
          if [[ $passed == "true" ]]; then
            echo "Shards passed"
            exit 0
          else
            echo "Shards failed"
            exit 1
          fi
  abq-work:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        shard: ['1', '2']
        ruby:
          - 2.6
          - 3.1
        gemfile:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - '3.10'
          - 3.11
          - 3.12
    env:
      BUNDLE_WITHOUT: 'development'
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rspec-${{ matrix.gemfile }}.gemfile
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: setup ruby & bundle install
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Setup abq
        uses: rwx-research/setup-abq@v1
        with:
          access-token: ${{ secrets.RWX_ACCESS_TOKEN }}
      - name: start abq work
        continue-on-error: true
        run: abq work -n cpu-cores --run-id "$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT-${{matrix.ruby}}-${{matrix.gemfile}}"
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
          ABQ_API_KEY: ${{ secrets.RWX_ACCESS_TOKEN }}
  yard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - run: bin/check_yard
