name: Tests & Linting
on: pull_request
permissions:
  contents: read
  pull-requests: write
jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          skip_install: true # use bundler
          use_bundler: true
          rubocop_flags: '--config .rubocop.yml'
          fail_on_error: true
  rspec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - run: |
          bundle exec rspec \
            --format json --out tmp/rspec.json \
            --format documentation
      - name: Upload test results to Captain
        uses: rwx-research/upload-captain-artifact@v1
        if: always()
        continue-on-error: true
        with:
          artifacts: |
            [
              {
                "name": "RSpec",
                "path": "tmp/rspec.json",
                "kind": "test_results",
                "parser": "rspec_json"
              }
            ]
          job-matrix: ${{ toJSON(matrix) }}
          captain-token: ${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}
  nixfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - run: nix fmt
      - run: |
          git_leftovers=$(git status --porcelain)
          if [ -z $git_leftovers ]
          then
            echo "✅ nix fmt didn't change anything"
          else
            echo "❌ unformatted changes left behind"
            git diff
            git status --porcelain
            exit 1
          fi
  abq:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Download abq
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'rwx-research/abq'
          version: 'tags/init'
          file: 'abq'
          target: 'abq/abq'
          token: ${{ secrets.MICHAELGLASS_READ_ABQ_TOKEN }}
      - name: Set abq path and make it executable
        run: |
          echo "$GITHUB_WORKSPACE/abq" >> $GITHUB_PATH
          chmod +x $GITHUB_WORKSPACE/abq/abq
      - name: setup ruby & bundle install
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          bundler-cache: true
      - name: start abq test
        run: abq test --reporter dot -- bundle exec rspec
        env:
          ABQ_LOG: ${{ runner.debug && 'debug' || 'info' }}
